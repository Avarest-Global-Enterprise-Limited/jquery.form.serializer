// Generated by CoffeeScript 1.7.1
(function() {
  describe('$.fn.getSerializedForm.Serializer', function() {
    describe('constructor($this)', function() {
      return it('should save the element as an instance variable', function() {
        var $this, serializer;
        $this = $();
        serializer = new $.fn.getSerializedForm.Serializer($this);
        return expect(serializer.$this).to.eq($this);
      });
    });
    return describe('.serializeField(name, value)', function() {
      beforeEach(function() {
        return this.serializer = new $.fn.getSerializedForm.Serializer;
      });
      context('if the name is a simple field name', function() {
        return it('should return a plain value', function() {
          var value;
          value = this.serializer.serializeField('email', 'test@email.com');
          return expect(value).to.eql({
            email: 'test@email.com'
          });
        });
      });
      context('if the name is an array field name', function() {
        context('the key', function() {
          return it('should not contain the brackets', function() {
            var value;
            value = this.serializer.serializeField('emails[]', 'test@email.com');
            return expect(value).to.have.key('emails');
          });
        });
        return it('should return an array', function() {
          var value;
          value = this.serializer.serializeField('emails[]', 'test@email.com');
          return expect(value).to.eql({
            emails: ['test@email.com']
          });
        });
      });
      return context('if the name is a named array field name', function() {
        context('the key', function() {
          return it('should not contain the brackets', function() {
            var value;
            value = this.serializer.serializeField('emails[john]', 'john@email.com');
            return expect(value).to.have.key('emails');
          });
        });
        return it('should return a json object', function() {
          var value;
          value = this.serializer.serializeField('emails[john]', 'john@email.com');
          return expect(value).to.eql({
            emails: {
              john: 'john@email.com'
            }
          });
        });
      });
    });
  });

}).call(this);
