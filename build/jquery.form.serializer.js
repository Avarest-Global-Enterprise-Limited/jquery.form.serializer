// Generated by CoffeeScript 1.7.1
(function() {
  (function($) {
    var Serializer, regexp, selectors;
    regexp = {
      simple: /^[a-z][\w-:\.]*$/i,
      array: /^([a-z][\w-:\.]*)\[(.*\])$/i
    };
    selectors = {
      submittable: 'input, select, textarea',
      submittableFilter: '[name]:not(:disabled)'
    };
    Serializer = (function() {
      function Serializer($this) {
        this.$this = $this;
        this.arrays = {};
      }

      Serializer.prototype.serializeField = function(name, value, fullName) {
        var cleanName, matches, response, _base;
        if (fullName == null) {
          fullName = name;
        }
        response = {};
        if (regexp.simple.test(name)) {
          response[name] = value;
        } else if (matches = name.match(regexp.array)) {
          cleanName = matches[2].replace("]", "");
          if (cleanName === "") {
            if ((_base = this.arrays)[fullName] == null) {
              _base[fullName] = [];
            }
            this.arrays[fullName].push(value);
            response[matches[1]] = this.arrays[fullName];
          } else {
            response[matches[1]] = this.serializeField(cleanName, value, name);
          }
        }
        return response;
      };

      Serializer.prototype.getSubmittableFieldValues = function() {
        var fields;
        fields = [];
        this.$this.find(selectors.submittable).filter(selectors.submittableFilter).each(function() {
          var name;
          name = $(this).attr('name');
          return fields.push([name, $(this).val()]);
        });
        return fields;
      };

      Serializer.prototype.serialize = function() {
        var field, fields, values, _i, _len;
        values = {};
        fields = this.getSubmittableFieldValues();
        for (_i = 0, _len = fields.length; _i < _len; _i++) {
          field = fields[_i];
          $.extend(true, values, this.serializeField(field[0], field[1]));
        }
        return values;
      };

      return Serializer;

    })();
    $.fn.getSerializedForm = function() {
      return new $.fn.getSerializedForm.Serializer(this.first()).serialize();
    };
    $.fn.getSerializedForm.regexp = regexp;
    $.fn.getSerializedForm.selectors = selectors;
    return $.fn.getSerializedForm.Serializer = Serializer;
  })(jQuery);

}).call(this);
